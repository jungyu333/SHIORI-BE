version: '3'

services:
  mysql:
    image: mysql:8.0
    container_name: shiori-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: shiori
    ports:
      - "33306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - shiori-net

  redis:
    image: redis:7
    container_name: shiori-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data:/data
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - shiori-net

  redis_insight:
    image: redislabs/redisinsight:1.14.0
    container_name: shiori-redisinsight
    restart: always
    depends_on:
      - redis
    ports:
      - "8001:8001"
    volumes:
      - redis_insight_data:/db
    networks:
      - shiori-net

  mongodb:
    image: mongo:8.0
    container_name: shiori-mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_DATABASE: admin
    ports:
      - "27017:27017"
    command: ["mongod", "--config", "/etc/mongo/mongod.conf"]
    volumes:
      - ./mongo/mongod.conf:/etc/mongo/mongod.conf
      - ./mongo/mongodb.key:/etc/mongo/mongodb.key
      - mongo_data:/data/db
    networks:
      - shiori-net

  worker:
    build:
      context: ../..
      dockerfile: ./docker/dev/Dockerfile.worker
    container_name: shiori-celery-worker
    restart: always
    depends_on:
      - redis
      - mongodb
      - mysql
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/2
      - CELERY_BACKEND_URL=redis://redis:6379/3
    volumes:
      - ../..:/app
    networks:
      - shiori-net


volumes:
  mysql_data:
  redis_data:
  redis_insight_data:
  mongo_data:

networks:
  shiori-net:
    driver: bridge
